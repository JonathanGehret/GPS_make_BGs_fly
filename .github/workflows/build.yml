name: Build GPS Analysis Suite

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: GPS_Analysis_Suite_Linux
            executable_extension: ""
          - os: windows-latest
            artifact_name: GPS_Analysis_Suite_Windows
            executable_extension: ".exe"
          - os: macos-latest
            artifact_name: GPS_Analysis_Suite_macOS
            executable_extension: ""
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
    
    - name: Build executable
      run: |
        pyinstaller --clean GPS_Analysis_Suite.spec
    
    - name: Test executable (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        ./dist/GPS_Analysis_Suite --help || echo "Help test completed"
    
    - name: Test executable (Windows)
      if: runner.os == 'Windows'
      run: |
        .\dist\GPS_Analysis_Suite.exe --help || echo "Help test completed"
    
    - name: Prepare artifacts
      run: |
        mkdir -p release
        cp -r dist/* release/ || copy dist\* release\ || true
        cp README.md release/ || copy README.md release\ || true
        cp BUILD_GUIDE.md release/ || copy BUILD_GUIDE.md release\ || true
        cp requirements.txt release/ || copy requirements.txt release\ || true
        cp -r data release/ || xcopy /E /I data release\data || true
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: release/
        retention-days: 30
    
    - name: Create Release (on tag push)
      if: startsWith(github.ref, 'refs/tags/v')
      uses: softprops/action-gh-release@v1
      with:
        files: release/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
